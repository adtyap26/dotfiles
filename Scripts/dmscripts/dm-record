#!/usr/bin/env bash

DMENU="dmenu -i -l 20 -p"
AUDIOP="$(pacmd list-sources | grep -PB 1 "analog.*monitor>" | head -n 1 | perl -pe 's/.* //g')"

rec_proc="/tmp/recordingpid"

record_dir="~/Videos/ScreenRecorder/"
timestamp='+%Y-%m-%d_%T'

resolution='1366x768'
fps='30'

audio_device='alsa_output.usb-Focusrite_Scarlett_2i2_USB_Y86EP6H211E46C-00.analog-stereo.monitor'

prompt="Record"
options=(
    "Screen"
    "Audio"
)

yesno() {
    echo "$(echo -e "No\nYes" | ${DMENU} "${1}")"
}

start_recording() { 
    case "$1" in
        Screen) screen_capture;;
        Audio) audio_capture;;
        *) echo Invalid input;;
    esac
}

stop_recording() {
  recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
  kill -15 "$recpid"
	rm -f /tmp/recordingpid
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
	exit
}

audio_capture() { \
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	"$HOME/Music/AudioRecorder/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid
}

screen_capture() { \ 
	ffmpeg -y \
	-f x11grab \
	-framerate 30 \
	-s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
	-i "$DISPLAY" \
  -f pulse -i "$AUDIOP" \
	-f pulse -i default \
 	-vcodec libx264 -qp 18 -preset ultrafast \
	"$HOME/Videos/ScreenRecorder/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
}

camera_capture() { \
 ffplay /dev/video0 -video_size 300x280 -window_title 'WebCam' -noborder -alwaysontop -an -vf format=rgb24 \


}

if [ -f $rec_proc ]
then [ $(yesno "Stop Active Recording?") = "Yes" ] && stop_recording || exit

elif [ ! $# -eq 0 ]

then start_recording $1 
else
    # Prompt the user
  #   choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "${prompt}")
    choice=$(printf '%s\n' "${options[@]}" | ${DMENU} "${prompt}")

    # Act on user selection
    [ $choice ] && start_recording $choice
fi
